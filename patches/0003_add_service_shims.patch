"""Backward-compatibility shim for `src.core.services.usage_tracking_service`.

Renamed to `usage_tracking_service_service.py`; import from the new module.
"""

from __future__ import annotations

import warnings

from .usage_tracking_service_service import *

warnings.warn(
    "Importing from 'src.core.services.usage_tracking_service' is deprecated; "
    "use 'src.core.services.usage_tracking_service_service' instead",
    DeprecationWarning,
)

"""Backward-compatibility shim for `src.core.services.session_service`.

Renamed to `session_service_service.py`; import from the new module.
"""

from __future__ import annotations

import warnings

from .session_service_service import *

warnings.warn(
    "Importing from 'src.core.services.session_service' is deprecated; "
    "use 'src.core.services.session_service_service' instead",
    DeprecationWarning,
)

"""Backward-compatibility shim for `src.core.services.command_service`.

Renamed to `command_service_service.py`; import from the new module.
"""

from __future__ import annotations

import warnings

from .command_service_service import *

warnings.warn(
    "Importing from 'src.core.services.command_service' is deprecated; "
    "use 'src.core.services.command_service_service' instead",
    DeprecationWarning,
)

"""Backward-compatibility shim for `src.core.services.rate_limiter`.

Renamed to `rate_limiter_service.py`; import from the new module.
"""

from __future__ import annotations

import warnings

from .rate_limiter_service import *

warnings.warn(
    "Importing from 'src.core.services.rate_limiter' is deprecated; "
    "use 'src.core.services.rate_limiter_service' instead",
    DeprecationWarning,
)

"""Backward-compatibility shim for `src.core.services.loop_detector`.

Renamed to `loop_detector_service.py`; import from the new module.
"""

from __future__ import annotations

import warnings

from .loop_detector_service import *

warnings.warn(
    "Importing from 'src.core.services.loop_detector' is deprecated; "
    "use 'src.core.services.loop_detector_service' instead",
    DeprecationWarning,
)

"""Backward-compatibility shim for `src.core.services.response_processor`.

Renamed to `response_processor_service.py`; import from the new module.
"""

from __future__ import annotations

import warnings

from .response_processor_service import *

warnings.warn(
    "Importing from 'src.core.services.response_processor' is deprecated; "
    "use 'src.core.services.response_processor_service' instead",
    DeprecationWarning,
)

"""Backward-compatibility shim for `src.core.services.backend_service`.

Renamed to `backend_service.py` (no change in name for service modules is desired
â€” this shim keeps compatibility). This file re-exports from the implementation
module when it is moved to `backend_service_service.py`.
"""

from __future__ import annotations

import warnings

from .backend_service_service import *

warnings.warn(
    "Importing from 'src.core.services.backend_service' is deprecated; "
    "use 'src.core.services.backend_service_service' instead",
    DeprecationWarning,
)


