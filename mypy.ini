[mypy]
namespace_packages = True
explicit_package_bases = True
# Enable stricter type checking
disallow_untyped_defs = True
disallow_untyped_calls = True
check_untyped_defs = True
warn_return_any = True

# Better handling of abstract methods and interface implementations
warn_no_return = True
warn_unreachable = True

# For better DI code analysis, enable these:
show_error_codes = True
show_column_numbers = True

# Platform-specific configuration will be handled per-module below

# Better handling of DI patterns and unused code detection
# Allow unused arguments in Pydantic models (they're required by the schema)
[mypy-pydantic.*]
ignore_missing_imports = True

# Ignore missing imports for common libraries
[mypy-requests.*]
ignore_missing_imports = True

[mypy-fastapi.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-uvicorn.*]
ignore_missing_imports = True

# Platform-specific modules that may not be available on Windows
[mypy-pty]
ignore_missing_imports = True

[mypy-openai.*]
ignore_missing_imports = True

[mypy-anthropic.*]
ignore_missing_imports = True

[mypy-google.*]
ignore_missing_imports = True

[mypy-google.genai.*]
ignore_missing_imports = True

[mypy-google.generativeai.*]
ignore_missing_imports = True

# Disable specific error codes only where absolutely necessary
[mypy-tests.*]
#ignore_errors = True
[mypy-testing_framework]
ignore_missing_imports = True

# Legacy enhanced test uses broad mocks and simplified types; ignore mypy there
[mypy-tests.unit.core.test_backend_service_enhanced]
ignore_errors = True

[mypy-tests.unit.chat_completions_tests.test_real_cline_response]
ignore_errors = True

[mypy-tests.conftest]
ignore_errors = True

# Ignore import errors for the domain_entities module that has been renamed
[mypy-src.core.interfaces.domain_entities.*]
ignore_missing_imports = True

# Ignore import errors for the responses module
[mypy-src.core.domain.responses]
ignore_missing_imports = True

# Ignore ProcessedResponse import issues in specific files
[mypy-src.core.transport.fastapi.response_adapters]
ignore_errors = True

[mypy-src.connectors.anthropic]
ignore_errors = True

[mypy-src.core.services.response_handlers]
ignore_errors = True

[mypy-src.core.services.response_processor_service]
ignore_errors = True

[mypy-src.core.di.services]
ignore_errors = True

[mypy-src.core.services.request_processor_service]
ignore_errors = True

[mypy-src.connectors.gemini]
ignore_errors = True

[mypy-src.connectors.gemini_oauth_personal]
ignore_errors = True

[mypy-src.core.app.controllers.anthropic_controller]
ignore_errors = True

[mypy-src.core.services.tool_call_repair_service]
ignore_errors = True

[mypy-src.core.app.stages.test_stages]
ignore_errors = True

# For better vulture analysis - configure these files to be more precise
[mypy-src.anthropic_models]
ignore_errors = False
warn_unused_ignores = False

[mypy-src.gemini_models]
ignore_errors = False
warn_unused_ignores = False

[mypy-src.command_parser]
ignore_errors = False
warn_unused_ignores = False

[mypy-src.constants]
ignore_errors = False
warn_unused_ignores = False

[mypy-src.core.app.controllers.__init__]
ignore_errors = False
warn_unused_ignores = False

[mypy-src.core.adapters]
ignore_errors = False
warn_unused_ignores = False

# Suppress async generator false positives in streaming services
[mypy-src.core.services.streaming.stream_normalizer]
disable_error_code = override

[mypy-src.core.services.streaming_response_processor_service]
disable_error_code = override