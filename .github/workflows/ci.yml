name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with ruff
      run: |
        python -m ruff check .

    - name: Format with black
      run: |
        python -m black . --check

    - name: Type check with mypy
      run: |
        python -m mypy src

    - name: Run unit tests with coverage
      run: |
        python -m pytest --cov --cov-branch --cov-report=xml:coverage-unit.xml -v tests/unit

    - name: Upload unit coverage to Codecov
      if: ${{ always() }}
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: matdev83/llm-interactive-proxy
        files: ./coverage-unit.xml
        flags: unit
        verbose: true
        fail_ci_if_error: false

    - name: Run integration tests with coverage append
      env:
        # Set some default dummy values for the integration tests
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'dummy_key' }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY || 'dummy_key' }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY || 'dummy_key' }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY || 'dummy_key' }}
      run: |
        python -m pytest --cov --cov-branch --cov-append --cov-report=xml:coverage-integration.xml -v tests/integration

    - name: Upload integration coverage to Codecov
      if: ${{ always() }}
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: matdev83/llm-interactive-proxy
        files: ./coverage-integration.xml
        flags: integration
        verbose: true
        fail_ci_if_error: false
    
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install mdformat only
      run: |
        python -m pip install --upgrade pip
        pip install mdformat

    - name: Install mkdocs dependencies (if mkdocs config present)
      if: ${{ hashFiles('mkdocs.yml', 'mkdocs.yaml') != '' }}
      run: |
        python -m pip install --upgrade pip
        pip install mkdocs mkdocs-material mkdocstrings[python]

    - name: Autoformat documentation (mdformat)
      run: |
        mdformat README.md CONTRIBUTING.md docs/

    - name: Check documentation formatting
      run: |
        mdformat --check README.md CONTRIBUTING.md docs/

    - name: Test docs building
      if: ${{ hashFiles('mkdocs.yml', 'mkdocs.yaml') != '' }}
      run: |
        mkdocs build --strict
