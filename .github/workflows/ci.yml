name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run unit tests with coverage
      env:
        OPENAI_API_KEY: dummy_key
        GEMINI_API_KEY: dummy_key
        ANTHROPIC_API_KEY: dummy_key
        OPENROUTER_API_KEY: dummy_key
      run: |
        python -m pytest -v tests/unit --cov=src --cov-branch --cov-report=xml

    - name: Run integration tests with coverage append
      env:
        OPENAI_API_KEY: dummy_key
        GEMINI_API_KEY: dummy_key
        ANTHROPIC_API_KEY: dummy_key
        OPENROUTER_API_KEY: dummy_key
      run: |
        python -m pytest -v tests/integration --cov=src --cov-branch --cov-append --cov-report=xml

    - name: Upload combined coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: matdev83/llm-interactive-proxy
        files: ./coverage.xml
        fail_ci_if_error: false
